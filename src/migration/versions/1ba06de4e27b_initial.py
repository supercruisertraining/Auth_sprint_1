"""initial

Revision ID: 1ba06de4e27b
Revises: 
Create Date: 2022-11-05 15:15:33.288571

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1ba06de4e27b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    op.execute("CREATE SCHEMA IF NOT EXISTS auth")
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin_users',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('username'),
    schema='auth'
    )
    op.create_table('roles',
    sa.Column('role_name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('role_name'),
    sa.UniqueConstraint('position'),
    schema='auth'
    )
    op.create_table('users',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('role', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['role'], ['auth.roles.role_name'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('username'),
    schema='auth'
    )
    op.create_table('login_stat',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('ip', sa.String(), nullable=True),
    sa.Column('os', sa.String(), nullable=True),
    sa.Column('browser', sa.String(), nullable=True),
    sa.Column('device', sa.String(), nullable=True),
    sa.Column('created_at_utc', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['auth.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='auth'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    op.execute("DROP SCHEMA IF EXISTS auth")
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('login_stat', schema='auth')
    op.drop_table('users', schema='auth')
    op.drop_table('roles', schema='auth')
    op.drop_table('admin_users', schema='auth')
    # ### end Alembic commands ###
